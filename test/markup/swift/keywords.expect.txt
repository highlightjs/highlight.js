<span class="hljs-type">Sequence</span>.<span class="hljs-keyword">Protocol</span> <span class="hljs-type">Protocol</span>
<span class="hljs-type">String</span>.<span class="hljs-keyword">Type</span> <span class="hljs-type">Type</span>

<span class="hljs-type">String</span>.<span class="hljs-keyword">init</span> <span class="hljs-keyword">init</span>
<span class="hljs-type">String</span>.<span class="hljs-keyword">self</span> <span class="hljs-keyword">self</span>

<span class="hljs-keyword">Any</span> <span class="hljs-keyword">Self</span>
(<span class="hljs-keyword">_</span> name: <span class="hljs-type">String</span>)
x <span class="hljs-keyword">as</span> <span class="hljs-type">Int</span>
x <span class="hljs-keyword">as?</span> <span class="hljs-type">Double</span>
x <span class="hljs-keyword">as!</span> <span class="hljs-type">String</span>
x <span class="hljs-keyword">is</span> <span class="hljs-type">String</span>
<span class="hljs-keyword">init?</span> <span class="hljs-keyword">init!</span> <span class="hljs-keyword">init</span>
<span class="hljs-keyword">try?</span> <span class="hljs-keyword">try!</span> <span class="hljs-keyword">try</span>
<span class="hljs-literal">true</span> <span class="hljs-literal">false</span> <span class="hljs-literal">nil</span>
<span class="hljs-keyword">fileprivate(set)</span> <span class="hljs-keyword">internal(set)</span> <span class="hljs-keyword">open(set)</span> <span class="hljs-keyword">private(set)</span> <span class="hljs-keyword">public(set)</span>
<span class="hljs-keyword">unowned(safe)</span> <span class="hljs-keyword">unowned(unsafe)</span>
<span class="hljs-keyword">async</span> <span class="hljs-keyword">await</span>
<span class="hljs-keyword">isolated</span> <span class="hljs-keyword">nonisolated</span>
<span class="hljs-keyword">public</span> <span class="hljs-keyword">private</span> <span class="hljs-keyword">fileprivate</span> <span class="hljs-keyword">package</span> <span class="hljs-keyword">internal</span> <span class="hljs-keyword">open</span>

<span class="hljs-keyword">#if</span> <span class="hljs-type">DEBUG</span>
<span class="hljs-title function_"><span class="hljs-keyword">#error</span></span>(<span class="hljs-string">&quot;Error&quot;</span>)
<span class="hljs-keyword">#elseif</span> <span class="hljs-title function_">os</span>(macOS)
<span class="hljs-title function_"><span class="hljs-keyword">#error</span></span>(<span class="hljs-string">&quot;Error&quot;</span>)
<span class="hljs-keyword">#elseif</span> <span class="hljs-title function_">arch</span>(arm64)
<span class="hljs-title function_"><span class="hljs-keyword">#error</span></span>(<span class="hljs-string">&quot;Error&quot;</span>)
<span class="hljs-keyword">#elseif</span> <span class="hljs-title function_">compiler</span>(<span class="hljs-operator">&gt;=</span><span class="hljs-number">5.0</span>)
<span class="hljs-title function_"><span class="hljs-keyword">#error</span></span>(<span class="hljs-string">&quot;Error&quot;</span>)
<span class="hljs-keyword">#elseif</span> <span class="hljs-title function_">canImport</span>(<span class="hljs-type">UIKit</span>)
<span class="hljs-title function_"><span class="hljs-keyword">#error</span></span>(<span class="hljs-string">&quot;Error&quot;</span>)
<span class="hljs-keyword">#elseif</span> <span class="hljs-title function_">targetEnvironment</span>(simulator)
<span class="hljs-title function_"><span class="hljs-keyword">#error</span></span>(<span class="hljs-string">&quot;Error&quot;</span>)
<span class="hljs-keyword">#endif</span>

<span class="hljs-title function_"><span class="hljs-keyword">#imageLiteral</span></span>(resourceName: expression)
<span class="hljs-title function_"><span class="hljs-keyword">#fileLiteral</span></span>(resourceName: expression)

x.<span class="hljs-title function_">as</span>(y)
x.<span class="hljs-title function_">for</span>(y)
#notAKeyword
