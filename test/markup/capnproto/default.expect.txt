<span class="hljs-meta">@0xdbb9ad1f14bf0b36;</span>  <span class="hljs-comment"># unique file ID, generated by `capnp id`</span>

<span class="hljs-keyword">struct</span> <span class="hljs-title class_">Person</span> {
  name <span class="hljs-symbol">@0</span> :<span class="hljs-type">Text</span>;
  birthdate <span class="hljs-symbol">@3</span> :Date;

  email <span class="hljs-symbol">@1</span> :<span class="hljs-type">Text</span>;
  phones <span class="hljs-symbol">@2</span> :<span class="hljs-type">List</span>(PhoneNumber);

  <span class="hljs-keyword">struct</span> <span class="hljs-title class_">PhoneNumber</span> {
    number <span class="hljs-symbol">@0</span> :<span class="hljs-type">Text</span>;
    type <span class="hljs-symbol">@1</span> :Type;

    <span class="hljs-keyword">enum</span> <span class="hljs-title class_">Type</span> {
      mobile <span class="hljs-symbol">@0</span>;
      home <span class="hljs-symbol">@1</span>;
      work <span class="hljs-symbol">@2</span>;
    }
  }
}

<span class="hljs-keyword">struct</span> <span class="hljs-title class_">Date</span> {
  year <span class="hljs-symbol">@0</span> :<span class="hljs-type">Int16</span>;
  month <span class="hljs-symbol">@1</span> :<span class="hljs-type">UInt8</span>;
  day <span class="hljs-symbol">@2</span> :<span class="hljs-type">UInt8</span>;
  flags <span class="hljs-symbol">@3</span> :<span class="hljs-type">List</span>(<span class="hljs-type">Bool</span>) = [ <span class="hljs-literal">true</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">true</span> ];
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">Node</span> {
  isDirectory <span class="hljs-symbol">@0</span> () -&gt; (result :<span class="hljs-type">Bool</span>);
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">Directory</span> <span class="hljs-keyword">extends</span>(<span class="hljs-title class_">Node</span>) {
  list <span class="hljs-symbol">@0</span> () -&gt; (list: <span class="hljs-type">List</span>(Entry));
  <span class="hljs-keyword">struct</span> <span class="hljs-title class_">Entry</span> {
    name <span class="hljs-symbol">@0</span> :<span class="hljs-type">Text</span>;
    node <span class="hljs-symbol">@1</span> :Node;
  }

  create <span class="hljs-symbol">@1</span> (name :<span class="hljs-type">Text</span>) -&gt; (file :File);
  mkdir <span class="hljs-symbol">@2</span> (name :<span class="hljs-type">Text</span>) -&gt; (directory :Directory)
  open <span class="hljs-symbol">@3</span> (name :<span class="hljs-type">Text</span>) -&gt; (node :Node);
  delete <span class="hljs-symbol">@4</span> (name :<span class="hljs-type">Text</span>);
  link <span class="hljs-symbol">@5</span> (name :<span class="hljs-type">Text</span>, node :Node);
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">File</span> <span class="hljs-keyword">extends</span>(<span class="hljs-title class_">Node</span>) {
  size <span class="hljs-symbol">@0</span> () -&gt; (size: <span class="hljs-type">UInt64</span>);
  read <span class="hljs-symbol">@1</span> (startAt :<span class="hljs-type">UInt64</span> = <span class="hljs-number">0</span>, amount :<span class="hljs-type">UInt64</span> = <span class="hljs-number">0</span>xffffffffffffffff)
       -&gt; (data: <span class="hljs-type">Data</span>);
  <span class="hljs-comment"># Default params = read entire file.</span>

  write <span class="hljs-symbol">@2</span> (startAt :<span class="hljs-type">UInt64</span>, data :<span class="hljs-type">Data</span>);
  truncate <span class="hljs-symbol">@3</span> (size :<span class="hljs-type">UInt64</span>);
}