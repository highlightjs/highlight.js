<span class="hljs-keyword">select</span> time, price <span class="hljs-keyword">by</span> date,stock <span class="hljs-keyword">from</span> quote <span class="hljs-built_in">where</span> price=(<span class="hljs-built_in">max</span>;price)<span class="hljs-built_in">fby</span> stock
data:<span class="hljs-built_in">raze</span> <span class="hljs-built_in">value</span> <span class="hljs-built_in">flip</span> trade
<span class="hljs-keyword">select</span> vwap:size <span class="hljs-built_in">wavg</span> price <span class="hljs-keyword">by</span> <span class="hljs-number">5</span> <span class="hljs-built_in">xbar</span> time.minute <span class="hljs-keyword">from</span> aapl <span class="hljs-built_in">where</span> date within (.z.d<span class="hljs-number">-10</span>;.z.d)
f1:{[x;y;z] <span class="hljs-built_in">show</span> (x;y+z);<span class="hljs-built_in">sum</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>}
.z.pc:{[handle] <span class="hljs-built_in">show</span> <span class="hljs-number">-3</span>!(<span class="hljs-type">`long</span>$.z.p;<span class="hljs-string">&quot;Closed&quot;</span>;handle)}
<span class="hljs-comment">// random normal distribution, e.g. nor 10</span>
nor:{$[x=<span class="hljs-number">2</span>*n:x div <span class="hljs-number">2</span>;<span class="hljs-built_in">raze</span> sqrt[<span class="hljs-number">-2</span>*log n?<span class="hljs-number">1</span>f]*/:(<span class="hljs-built_in">sin</span>;<span class="hljs-built_in">cos</span>)@\:(<span class="hljs-number">2</span>*pi)*n?<span class="hljs-number">1</span>f;<span class="hljs-number">-1</span>_.z.s <span class="hljs-number">1</span>+x]}

mode:{<span class="hljs-built_in">where</span> g=<span class="hljs-built_in">max</span> g:<span class="hljs-built_in">count</span> <span class="hljs-built_in">each</span> <span class="hljs-built_in">group</span> x}		<span class="hljs-comment">// mode function</span>